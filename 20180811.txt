现阶段面试难点主要是数据结构和简单的算法
视频讲的感觉有些慢 所以回归书本
算法和算法导论讲的挺好但数据结构感觉一笔带过
不能针对面试 这两本书应该是找到工作后持续学习的算法书
所以回归到《数据结构与算法分析-C语言描述》这本书
虽然也是美国人写的 但感觉跟国内大学教材差不多 纯干货 口感柴得一笔
但很符合我的需求 前面几章的内容我看了眼基本上是笔试上的知识点
所以先以这本书为主 先搞定工作
太基础的内容我基本上就跳过了 大O记号这些效率分析之类的 数学基础不熟再看

最大子序列和
买这本书时看到的最大子序列问题卡住了 没搞懂它对半分成两个子序列来分析有什么用
看了眼这个分析数学细节太细了 求和符号之类的 感觉没啥必要 继续看
三个for循环应该就是n3级别了 没看懂一堆求和符号在干嘛 也没有什么可合并的
分治之前算法星球视频有学 但从没具体实现过 卡住我的一点就是没看懂为啥能用分治
最大子序列和可能在三个地方出现 左半 右半 横跨
马海 我也知道啊 这么分是这样的啊
嗯 有点道理好吧 三个for循环是n3 左半的n3 和 整个的n3 效率不一样 所以分的很细的n3也就会很小 合起来的cn也不大
所以分治的nlogn有点道理好吧
这点想通了 继续
但是还是有问题啊 一共八个元素 分两份四个 然后就左n3 右n3 和带中间两个的n3 一比就出来了
分治只分到四个元素一组就不分了 这感觉分得不彻底枚举得也不彻底
国内教材这代码风格是真的难看
这个就分了一次的是nlogn 那分到底的似乎还会好一些
第四种算法
还是线性的 看了代码感觉这应该是直觉能分析到的 清爽
简而言之就是贡献为负的就不需要 一次循环就解决问题 牛逼

二分查找 跳过

最大公因数的欧几里得算法
互相除余
以前学到过 看一眼就过的算法 效率也挺爆炸 logn
主要是数学证明有意思

表 栈 队列
抽象数据类型 abstract data type ADT
最基本的三个数据结构
表 list 基本操作 PrintList MakeEmpty Find Insert Delete FindKth（返回某个位置上的元素） 附加操作 next previous之类的
基本上就是数组 找容易 插入删除麻烦（前后补位）

链表 linked list
每一个结构均含有 表元素 和 指向下一个结构的指针
内存中不必连续储存
最后一个单元的指针为null
代码细节
都挺直观的
指针错误我没细看
双链表和循环链表就很直观的能理解了
双链表就是还有一个指向之前单元的指针
循环链表就是最后一个指向第一个
还有双向循环链表 总之很直观
么得理解难度
应用难度一下就好陡 先略过了
栈
概念简单 应用略
队列就是一头进一头出
应用略