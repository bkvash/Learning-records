cout还可以用从控制符指示cout以什么格式来显示整数
dec hex oct 分别表示 十进制 十六进制 八进制

int i = 42;
int j = 42;
int k = 42;
(cout << dec;)
cout << i << endl;
cout << hex;
cout << j << endl;
cout << oct;
cout << k << endl;
结果
42
2a
52

问题来了 整型变量的类型告诉了编译器 那么赋值的常量的类型怎么知道呢
答案是 除非整数后面有后缀表示类型 否则都按照int来处理
如l或L表示long u或U表示unsigned int
ul（不分大小写 但方便辨别 应用uL或UL）表示unsigned long
ll或LL 表示 long long
uLL（同样不分大小写 不一一全写）unsigned long long

char实质上也是一种整型 并且比short还小 存的是字符的编码
cin和cout会进行编码和解码的部分 所以

bool型 可转为int true为1 false为0
所有数字值或指针值都能隐式转换成bool
零为false 非零为true

const 限定符
先说我自己的理解 跟java里面的final差不多
声明就得给值 然后就不能改了
而书的内容也只有半页多 而且主要在讲用const比#define要好
跟我的理解没冲突

浮点数
这东西很多年前用金山游侠就知道 但至今不知道细节
将大值分成两部分 一部分表示值 另一部分对值进行放大或缩小
这个地方我看书有点懵逼了 在b站上找了公开课的视频看了眼
好像也没那么难
如 34.1245 和 34124.5 两个数 除小数点位置不一样 其他都一样
34.1245  = 0.341245 * 100
34124.5 = 0.341245 * 10000
所以第一个放值的地方 要把实际值化为纯小数 然后另一部分就是缩放因子
说白了就是科学计数法
写浮点数的两个方法
第一个就是正常写 xx.xx
第二种就是科学计数法 5.98E24 = 0.598 * 10^25
可以用e也可以用E 但这种方法数字中不能有空格
