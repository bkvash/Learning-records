今天看C++
之前看网上的C++教程 内容还是很硬核但是更硬核的内容要收费
这就很难受了 也不知道是不是很权威
所以又开始看C++ primer
目前看的还都是很基础的 但C++我又不敢随便跳过
数据类型这里还是可以细看一下 毕竟之前就C#没细看 数据类型的细节完全没概念
平时用就只用些 int float bool string 就这么多了

bit 位 内存单元 
这种细节我之前就没有学 感觉还是很重要
short 至少 16位
int至少跟short一样长
long至少32位 且 至少与int一样长
long long 至少 64位 至少与long一样长
字节 byte 通常指 8位内存单元 而在C++里对字节的定义于此不同
C++字节由至少能容纳实现基本字符集的・相邻位组成
这句话听不懂 而我看书也不应该抄这种东西=。=
总之C++里字节至少8位 且通常为8位
不同的系统这些数据类型的位数是不一样的
所以C++程序换环境（包括一个系统使用不同的编译器）时 可能会引发问题
C++不就是容易出事吗...
short 是 short int 的 简称
long 是 long int 的简称
这些都带符号
大括号初始化器....什么东西 不明白
学C#的感觉是顺利成章的 很顺而且自动地很系统
C++感觉就很散 这也可以 那也可以 有些古怪
unsigned关键字指无符号的 0~上限
unsigned 本身指 unsigned int
C++ 溢出不出错
那么问题来了 C#溢出会出错吗 我感觉也不会出错 查一哈
没查到 试了一下 也不会 这种值的溢出是不会的
栈溢出 内存溢出 都会出事
这种值越界应该不算什么很严重的事 所以编译器什么的都不会报错

开始讲进制了 之前我都跳过的部分 而且我甚至不知道语言入门书里会讲进制
直接写例子吧 
int i = 42；
int j = 0x42;
int k = 042;
结果是
42 66 34

i就是十进制的没啥说的
j是十六进制 0x或者 0X放数字前面表示是十六进制
k是八进制 第一位是0且后面的位上的数字都是1~7 （也就是符合八进制）就表示八进制
好奇在C#里试了一下 想都想得到0x这个肯定ok 
而八进制这个就不行 C#会无视掉前面这个0 还是当十进制处理
那么问题来了 C#里的八进制怎么表示呢
诶 这就有意思了 
C#他妈不支持八进制 至少是不像C++这样支持
C#的八进制要手动转 而且是toint里转 有个重载 要写个8当参数
其实就是基本上不支持八进制 只是给了个表示的方法