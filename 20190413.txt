 按钮 单选toggle 滑动条这些就不说了 本来就没啥内容
ScrollRect 滑动矩形 也就是滑动条的二维版本
拿来做摇杆算最典型的用法

canvas作用还是不太知道上次那个面试想要问我什么东西 不就是放ui吗 还能干什么
布局组件 
上次面试也问到我比如背包系统 排东西怎么排 我是动态的直接写在哪哪哪个位置 坐标一个一个排出来
面试官给我说可以用布局什么东西自动搞 应该就是这个布局组件

Atlas 图集
之前打过图集 也是一个有经验就好的事情 没啥太多为什么 用的时候学一学 不是理论方面的

canvas优化
ugui会自动合并批次 一个canvas的所有元素会合并到一个mesh里 任意一个改动就要重新合并所有元素的mesh
所以比较好的做法是 每一个UI界面都设置成一个Canvas 甚至如果一个界面下的元素比较多 可以考虑多套几个canvas 尤其是需要频繁改变的元素
这样可以降低合并mesh的开销 然而 canvas太多也不好 drawcall会上升 因为每一个canvas会单独占用一个drawcall
打图集也是为了降低drawcall 每一个贴图会多占用一个drawcall 打图集就是把多张图片合并到一起 这样减少drawcall
不是所有图片都适合使用图集 比如图标资源 几千个图标放一个图集里 而游戏中又只需要同时显示少部分的图标 而整个图集都会被载入到内存里
图标的出现率又很高 那么这么大的图集内存就几乎没有机会释放 所以这种图标就不太适合使用图集

书后面关于ugui还有很多内容 但不是基础 而是使用的时候一些常见可优化的点以及具体实现 我目前看不太明白 就先跳过了 之后工作上遇到了再回看
momo这书是真的好 ugui看过了 我准备看assetbundle那些 也就是资源加载 
但看了眼目录 其实很多东西我还特别应该看 比如动画 比如读数据部分 Excel操作这些 都是非常实用而且肯定要学 
面试里也很可能被问到 我不应该像之前一样人家问了 我就说 啊 不好意思 我还不会 会的越多就是离合格的程序员越近 也就越可能拿到工作
图形学那些 shader啊 管线啊 都是大工程 这些东西应该先看 看了肯定有用 会了肯定加分 走着
先看 资源加载

.meta文件必须进行版本控制
这东西是相当于资源视图中的参数 不传的话 别人虽然拿到了资源 但设置不正确 会出现问题

多工程 用导出包导入就好

Resources文件夹是标志性的目录 这里面的资源无论是否被引用都会强制打在游戏包里
这文件夹可以是顶层目录 也可以是某个文件夹的子目录 打包后Unity会自动合并
Resources目录下的资源最好不要直接引用在场景中 不然会被场景和resources打成两份

AssetBundle还是网游用的
StreamingAssets就是拿来放下载的AssetBundle资源
